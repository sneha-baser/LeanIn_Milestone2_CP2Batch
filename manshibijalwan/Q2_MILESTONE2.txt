
#include <bits/stdc++.h>
using namespace std;

struct ItStack
{
	stack<int> s;
	int minEle;

	void getMin()
	{
		if (s.empty())
			cout << "Stack is empty\n";

			cout <<"Minimum Element in the stack is: "
				<< minEle << "\n";
	}

	void peek()
	{
		if (s.empty())
		{
			cout << "Stack is empty ";
			return;
		}

		int t = s.top(); // Top element.

		cout << "Top Most Element is: ";
		(t < minEle)? cout << minEle: cout << t;
	}
	void pop()
	{
		if (s.empty())
		{
			cout << "Stack is empty\n";
			return;
		}

		cout << "Top Most Element Removed: ";
		int t = s.top();
		s.pop();

		if (t < minEle)
		{
			cout << minEle << "\n";
			minEle = 2*minEle - t;
		}

		else
			cout << t << "\n";
	}
	void push(int x)
	{
		if (s.empty())
		{
			minEle = x;
			s.push(x);
			cout << "Number Inserted: " << x << "\n";
			return;
		}

		else if (x < minEle)
		{
			s.push(2*x - minEle);
			minEle = x;
		}

		else
		s.push(x);

		cout << "Number Inserted: " << x << "\n";
	}
};

// Driver Code
int main()
{
	ItStack s;
	s.push(3);
	s.push(5);
	s.getMin();
	s.push(2);
	s.push(1);
	s.getMin();
	s.pop();
	s.getMin();
	s.pop();
	s.peek();

	return 0;
}

ReadMe: Program to push element of the array into a stack and then print minimum in the 
stack at each pop.
TIME COMPLEXITY: in O(1) time and O(1) extra space.
